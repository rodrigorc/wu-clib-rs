use std::path::PathBuf;

fn main() {
    simple_logger::SimpleLogger::new().init().unwrap();

    let mut cc = cc::Build::new();
    cc.flag("-Wno-unknown-pragmas");
    cc.flag("-Wno-deprecated-non-prototype");
    cc.flag("-Wno-logical-not-parentheses");
    //newlib defines this as "double __exp10(unsigned)" but there is a builtin "double __exp10(double)" somewhere...
    cc.define("__exp10", "__exp10_alt");
    // This enables some prototypes that many systems provide, but we don't have any.
    cc.define("_LIBC", "1");
    let libc = [
        "search/qsort.c",
        "search/bsearch.c",

        "string/bcopy.c",
        "string/bzero.c",
        "string/explicit_bzero.c",
        "string/ffsl.c",
        "string/ffsll.c",
        "string/fls.c",
        "string/flsl.c",
        "string/flsll.c",
        "string/index.c",
        "string/memchr.c",
        "string/memcmp.c",
        "string/memcpy.c",
        "string/memmove.c",
        "string/memset.c",
        "string/rindex.c",
        "string/strcasecmp.c",
        "string/strcat.c",
        "string/strchr.c",
        "string/strcmp.c",
        "string/strcoll.c",
        "string/strcpy.c",
        "string/strcspn.c",
        "string/strdup.c",
        "string/strdup_r.c",
        "string/strerror.c",
        "string/strerror_r.c",
        "string/strlcat.c",
        "string/strlcpy.c",
        "string/strlen.c",
        "string/strlwr.c",
        "string/strncasecmp.c",
        "string/strncat.c",
        "string/strncmp.c",
        "string/strncpy.c",
        "string/strnlen.c",
        "string/strnstr.c",
        "string/strpbrk.c",
        "string/strrchr.c",
        "string/strsep.c",
        "string/strsignal.c",
        "string/strspn.c",
        "string/strtok.c",
        "string/strtok_r.c",
        "string/strupr.c",
        "string/strxfrm.c",
        "string/strstr.c",
        "string/swab.c",
        "string/timingsafe_bcmp.c",
        "string/timingsafe_memcmp.c",
        "string/u_strerr.c",
        "string/wcscat.c",
        "string/wcschr.c",
        "string/wcscmp.c",
        "string/wcscoll.c",
        "string/wcscpy.c",
        "string/wcscspn.c",
        "string/wcslcat.c",
        "string/wcslcpy.c",
        "string/wcslen.c",
        "string/wcsncat.c",
        "string/wcsncmp.c",
        "string/wcsncpy.c",
        "string/wcsnlen.c",
        "string/wcspbrk.c",
        "string/wcsrchr.c",
        "string/wcsspn.c",
        "string/wcsstr.c",
        "string/wcstok.c",
        "string/wcswidth.c",
        "string/wcsxfrm.c",
        "string/wcwidth.c",
        "string/wmemchr.c",
        "string/wmemcmp.c",
        "string/wmemcpy.c",
        "string/wmemmove.c",
        "string/wmemset.c",
        "string/xpg_strerror_r.c",

        "ctype/ctype_.c",
        "ctype/isalnum.c",
        "ctype/isalpha.c",
        "ctype/iscntrl.c",
        "ctype/isdigit.c",
        "ctype/islower.c",
        "ctype/isupper.c",
        "ctype/isprint.c",
        "ctype/ispunct.c",
        "ctype/isspace.c",
        "ctype/isxdigit.c",
        "ctype/tolower.c",
        "ctype/toupper.c",
        "ctype/iswspace.c",
        "ctype/iswspace_l.c",
        
        "stdio/fiprintf.c",
        "stdio/fiscanf.c",
        "stdio/iprintf.c",
        "stdio/iscanf.c",
        "stdio/siprintf.c",
        "stdio/siscanf.c",
        "stdio/sniprintf.c",
        "stdio/svfiprintf.c",
        "stdio/svfiscanf.c",
        "stdio/svfprintf.c",
        "stdio/svfscanf.c",
        "stdio/vdiprintf.c",
        "stdio/vfprintf.c",
        "stdio/vfiprintf.c",
        "stdio/vfiscanf.c",
        "stdio/vfscanf.c",
        "stdio/vfwprintf.c",
        "stdio/viprintf.c",
        "stdio/viscanf.c",
        "stdio/vsiprintf.c",
        "stdio/vsiscanf.c",
        "stdio/vsniprintf.c",
        "stdio/sfputs_r.c",
        "stdio/ssputs_r.c",
        "stdio/clearerr.c",
        "stdio/fclose.c",
        "stdio/fdopen.c",
        "stdio/feof.c",
        "stdio/ferror.c",
        "stdio/fflush.c",
        "stdio/fgetc.c",
        "stdio/fgetpos.c",
        "stdio/fgets.c",
        "stdio/fileno.c",
        "stdio/findfp.c",
        "stdio/flags.c",
        "stdio/fopen.c",
        "stdio/fprintf.c",
        "stdio/fputc.c",
        "stdio/fputs.c",
        "stdio/fread.c",
        "stdio/freopen.c",
        "stdio/fscanf.c",
        "stdio/fseek.c",
        "stdio/fsetpos.c",
        "stdio/ftell.c",
        "stdio/fvwrite.c",
        "stdio/fwalk.c",
        "stdio/fwrite.c",
        "stdio/getc.c",
        "stdio/getchar.c",
        "stdio/getc_u.c",
        "stdio/getchar_u.c",
        "stdio/getdelim.c",
        "stdio/getline.c",
        "stdio/gets.c",
        "stdio/makebuf.c",
        "stdio/perror.c",
        "stdio/printf.c",
        "stdio/putc.c",
        "stdio/putchar.c",
        "stdio/putc_u.c",
        "stdio/putchar_u.c",
        "stdio/puts.c",
        "stdio/refill.c",
        "stdio/remove.c",
        "stdio/rename.c",
        "stdio/rewind.c",
        "stdio/rget.c",
        "stdio/scanf.c",
        "stdio/sccl.c",
        "stdio/setbuf.c",
        "stdio/setbuffer.c",
        "stdio/setlinebuf.c",
        "stdio/setvbuf.c",
        "stdio/snprintf.c",
        "stdio/sprintf.c",
        "stdio/sscanf.c",
        "stdio/stdio.c",
        "stdio/svfiwprintf.c",
        "stdio/svfiwscanf.c",
        "stdio/svfwprintf.c",
        "stdio/svfwscanf.c",
        "stdio/tmpfile.c",
        "stdio/tmpnam.c",
        "stdio/ungetc.c",
        "stdio/vdprintf.c",
        "stdio/vfiwprintf.c",
        "stdio/vfiwscanf.c",
        "stdio/vfwscanf.c",
        "stdio/vprintf.c",
        "stdio/vscanf.c",
        "stdio/vsnprintf.c",
        "stdio/vsprintf.c",
        "stdio/vsscanf.c",
        "stdio/wbuf.c",
        "stdio/wsetup.c",
        "stdio/fseeko.c",
        "stdio/ftello.c",

        "locale/locale.c",
        "locale/localeconv.c",

        "stdlib/__adjust.c",
        "stdlib/__atexit.c",
        "stdlib/__call_atexit.c",
        "stdlib/__exp10.c",
        "stdlib/__ten_mu.c",
        "stdlib/_Exit.c",
        "stdlib/abort.c",
        "stdlib/abs.c",
        "stdlib/aligned_alloc.c",
        "stdlib/assert.c",
        "stdlib/atexit.c",
        "stdlib/atof.c",
        "stdlib/atoff.c",
        "stdlib/atoi.c",
        "stdlib/atol.c",
        "stdlib/calloc.c",
        "stdlib/div.c",
        "stdlib/dtoa.c",
        "stdlib/dtoastub.c",
        "stdlib/environ.c",
        "stdlib/envlock.c",
        "stdlib/eprintf.c",
        "stdlib/exit.c",
        "stdlib/gdtoa-gethex.c",
        "stdlib/gdtoa-hexnan.c",
        "stdlib/getenv.c",
        "stdlib/getenv_r.c",
        "stdlib/imaxabs.c",
        "stdlib/imaxdiv.c",
        "stdlib/itoa.c",
        "stdlib/labs.c",
        "stdlib/ldiv.c",
        "stdlib/ldtoa.c",
        "stdlib/gdtoa-ldtoa.c",
        "stdlib/gdtoa-gdtoa.c",
        "stdlib/gdtoa-dmisc.c",
        "stdlib/gdtoa-gmisc.c",
        "stdlib/malloc.c",
        "stdlib/mblen.c",
        "stdlib/mblen_r.c",
        "stdlib/mbstowcs.c",
        "stdlib/mbstowcs_r.c",
        "stdlib/mbtowc.c",
        "stdlib/mbtowc_r.c",
        "stdlib/mlock.c",
        "stdlib/mprec.c",
        "stdlib/mstats.c",
        "stdlib/on_exit_args.c",
        "stdlib/quick_exit.c",
        "stdlib/rand.c",
        "stdlib/rand_r.c",
        "stdlib/random.c",
        "stdlib/realloc.c",
        "stdlib/reallocarray.c",
        "stdlib/reallocf.c",
        "stdlib/sb_charsets.c",
        "stdlib/strtod.c",
        "stdlib/strtoimax.c",
        "stdlib/strtol.c",
        "stdlib/strtoul.c",
        "stdlib/strtoumax.c",
        "stdlib/utoa.c",
        "stdlib/wcstod.c",
        "stdlib/wcstoimax.c",
        "stdlib/wcstol.c",
        "stdlib/wcstoul.c",
        "stdlib/wcstoumax.c",
        "stdlib/wcstombs.c",
        "stdlib/wcstombs_r.c",
        "stdlib/wctomb.c",
        "stdlib/wctomb_r.c",
        "stdlib/mbrtowc.c",

        "signal/psignal.c",
        "signal/raise.c",
        "signal/signal.c",
        "signal/sig2str.c",

        "reent/impure.c",
        "reent/execr.c",

        "syscalls/sysfork.c",

        "posix/execvp.c",
        "posix/execv.c",

        "../libm/common/sf_nan.c",
        "../libm/common/s_nan.c",
        "../libm/common/sf_isnan.c",
        "../libm/common/s_isnan.c",
        "../libm/common/s_fpclassify.c",
        "errno/errno.c",
    ];
    let sysroot = PathBuf::from(std::env::var("SYSROOT").expect("SYSROOT is undefined"));
    for f in libc {
        let path = sysroot.join(f);
        cc.file(&path);
        println!("cargo:rerun-if-changed={}", path.display());
    }
    cc.compile("wu-clib");

    println!("cargo:rerun-if-changed=clib.h");
    let out_path = PathBuf::from(std::env::var("OUT_DIR").unwrap());

    bindgen::Builder::default()
        .header("clib.h")
        .generate()
        .expect("bindgen generate failed")
        .write_to_file(out_path.join("bindings.rs"))
        .expect("bindgen write failed")
        ;

}
